{"version":3,"sources":["assets/logo.png","styles/global.ts","services/api.ts","hooks/auth.tsx","routes/Route.tsx","pages/SignIn/styles.ts","components/Tooltip/styles.ts","components/Tooltip/index.tsx","components/Input/styles.ts","components/Input/index.tsx","components/Button/styles.ts","components/Button/index.tsx","utils/getValidationErrors.ts","components/ToastContainer/styles.ts","components/ToastContainer/Toast/styles.ts","components/ToastContainer/Toast/index.tsx","components/ToastContainer/index.tsx","hooks/toast.tsx","pages/SignIn/index.tsx","pages/SignUp/styles.ts","pages/SignUp/index.tsx","pages/ForgotPassword/styles.ts","pages/ForgotPassword/index.tsx","pages/ResetPassword/styles.ts","pages/ResetPassword/index.tsx","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","routes/index.tsx","hooks/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","api","axios","create","baseURL","AuthContext","createContext","AuthProvider","children","useState","token","localStorage","getItem","user","defaults","headers","authorization","JSON","parse","data","setData","signIn","useCallback","a","email","password","post","response","setItem","stringify","signOut","removeItem","updateUser","Provider","value","useAuth","context","useContext","Error","Route","isPrivate","Component","component","rest","render","location","to","pathname","state","from","Container","styled","div","Content","appearFromLeft","keyframes","AnimationContainer","shade","Tooltip","title","className","props","isErrored","css","isFilled","isFocused","Input","name","containerStyle","Icon","icon","inputRef","useRef","setIsFocused","setIsFilled","useField","fieldName","defaultValue","error","registerField","handleInputFocus","handleInputBlur","current","useEffect","ref","path","style","size","onFocus","onBlur","color","button","Button","loading","type","getValidationErrors","err","validationErrors","inner","forEach","message","toastTypeVariations","info","success","animated","hasdescription","icons","Toast","removeToast","useToast","timer","setTimeout","id","clearTimeout","description","onClick","ToastContainer","messages","messagesWithTransitions","useTransition","right","opacity","enter","leave","map","item","key","ToastContext","ToastProvider","setMessages","addToast","toast","uuid","oldMessages","filter","SignIn","formRef","history","useHistory","handleSubmit","setErrors","schema","Yup","shape","required","validate","abortEarly","push","errors","src","logoImg","alt","onSubmit","FiMail","placeholder","FiLock","appearFromRight","SignUp","min","FiUser","ForgotPassword","setLoading","ResetPassword","useLocation","password_confirmation","oneOf","search","replace","Header","HeaderContent","Profile","main","SectionCard","Dashboard","href","Routes","exact","AppProvider","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7c38d6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.93003c4c.png\";","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n\n  body {\n    background: #312E38;\n    color: #FFF;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font-family: 'Roboto Slab', serif;\n    font-size: 16px;\n\n  }\n\n  h1, h2, h3, h4, h5, h6, strong{\n    font-weight: 500;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n`;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3333',\n});\n\nexport default api;\n","import React, { createContext, useCallback, useState, useContext } from 'react';\nimport api from '../services/api';\n\ninterface User {\n  id: string;\n  avatar_url: string;\n  name: string;\n  email: string;\n}\n\ninterface AuthState {\n  token: string;\n  user: User;\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  user: User;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n  updateUser(user: User): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@Gobarber: token');\n    const user = localStorage.getItem('@Gobarber: user');\n\n    if (token && user) {\n      api.defaults.headers.authorization = `Bearer ${token}`;\n      return { token, user: JSON.parse(user) };\n    }\n\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('/sessions', {\n      email,\n      password,\n    });\n\n    const { token, user } = response.data;\n\n    localStorage.setItem('@Gobarber: token', token);\n    localStorage.setItem('@Gobarber: user', JSON.stringify(user));\n\n    api.defaults.headers.authorization = `Bearer ${token}`;\n\n    setData({ token, user });\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@Gobarber: token');\n    localStorage.removeItem('@Gobarber: user');\n\n    setData({} as AuthState);\n  }, []);\n\n  const updateUser = useCallback(\n    (user: User) => {\n      setData({\n        token: data.token,\n        user,\n      });\n      localStorage.setItem('@Gobarber: user', JSON.stringify(user));\n    },\n    [setData, data.token],\n  );\n\n  return (\n    <AuthContext.Provider\n      value={{ user: data.user, signIn, signOut, updateUser }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport function useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n","import React from 'react';\nimport {\n  RouteProps as ReactDOMRouteProps,\n  Route as ReactDOMRoute,\n  Redirect,\n} from 'react-router-dom';\n\nimport { useAuth } from '../hooks/auth';\n\ninterface RouteProps extends ReactDOMRouteProps {\n  isPrivate?: boolean;\n  component: React.ComponentType;\n}\n\nconst Route: React.FC<RouteProps> = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  const { user } = useAuth();\n\n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={({ location }) => {\n        return isPrivate === !!user ? (\n          <Component />\n        ) : (\n          <Redirect\n            to={{\n              pathname: isPrivate ? '/' : '/dashboard',\n              state: { from: location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default Route;\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  max-width: 700px;\n\n  img {\n    max-width: 300px;\n  }\n`;\n\nconst appearFromLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  animation: ${appearFromLeft} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, '#f4ede8')};\n      }\n    }\n  }\n\n  > a {\n    color: #f4f4f4;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    transition: color 0.2s;\n\n    &:hover {\n      color: ${shade(0.2, '#f4f4f4')};\n    }\n\n    svg {\n      margin-right: 16px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n\n  span {\n    width: 160px;\n    background: #ff9000;\n    padding: 8x;\n    border-radius: 4px;\n    font-size: 14px;\n    font-weight: 500;\n    opacity: 0;\n    transition: opacity 0.4s;\n    position: absolute;\n    bottom: calc(100% + 12px);\n    visibility: hidden;\n\n    left: 50%;\n    transform: translateX(-50%);\n\n    color: #312e38;\n    &::before {\n      content: '';\n      border-style: solid;\n      border-color: #ff9000 transparent;\n      border-width: 6px 6px 0px 6px;\n      top: 100%;\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n  }\n\n  &:hover span {\n    opacity: 100%;\n    visibility: visible;\n  }\n`;\n","import React from 'react';\nimport { Container } from './styles';\n\ninterface TooltipProps {\n  title: string;\n  className?: string;\n}\n\nconst Tooltip: React.FC<TooltipProps> = ({ title, className, children }) => {\n  return (\n    <Container className={className}>\n      {children}\n      <span>{title}</span>\n    </Container>\n  );\n};\n\nexport default Tooltip;\n","import styled, { css } from 'styled-components';\n\nimport Tooltip from '../Tooltip';\n\ninterface ContainerProps {\n  isFocused: boolean;\n  isFilled: boolean;\n  isErrored: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  background: #232129;\n  border-radius: 10px;\n  padding: 16px;\n  width: 100%;\n\n  border: 2px solid #232129;\n  color: #666360;\n\n  display: flex;\n  align-items: center;\n\n  ${(props) =>\n    props.isErrored &&\n    css`\n      border-color: #c53030;\n    `}\n\n  ${(props) =>\n    props.isFilled &&\n    css`\n      color: #eaeaea;\n    `}\n\n  ${(props) =>\n    props.isFocused &&\n    css`\n      color: #f2f2f2;\n      border-color: #f2f2f2;\n    `}\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  input {\n    background: transparent;\n    flex: 1;\n    border: 0;\n    color: #F2F2F2;\n    &::placeholder {\n      color: #666360;\n    }\n  }\n\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nexport const Error = styled(Tooltip)`\n  height: 20px;\n  margin-left: 16px;\n  svg {\n    margin: 0;\n  }\n\n  span {\n    background: #c53030;\n    color: #fff;\n\n    &::before {\n      border-color: #c53030 transparent;\n    }\n  }\n`;\n","import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { useField } from '@unform/core';\nimport { FiAlertCircle } from 'react-icons/fi';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  containerStyle?: object;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({\n  name,\n  containerStyle = {},\n  icon: Icon,\n  ...rest\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container\n      style={containerStyle}\n      isErrored={!!error}\n      isFocused={isFocused}\n      isFilled={isFilled}\n    >\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n\n      {error && (\n        <Error title={error}>\n          {' '}\n          <FiAlertCircle color=\"#c53030\" size={20} />{' '}\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.button`\n  background: #f2f2f2;\n  height: 56px;\n  border-radius: 10px;\n  border: 0;\n  padding: 0 16px;\n  color: #312e38;\n  width: 100%;\n  font-weight: 500;\n  margin-top: 16px;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background: ${shade(0.2, '#F2F2F2')};\n  }\n`;\n","import React, { ButtonHTMLAttributes } from 'react';\n\nimport { Container } from './styles';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\n  loading?: boolean;\n};\n\nconst Button: React.FC<ButtonProps> = ({ children, loading, ...rest }) => (\n  <Container type=\"button\" {...rest}>\n    {loading ? 'Carregando...' : children}\n  </Container>\n);\n\nexport default Button;\n","import { ValidationError } from 'yup';\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Errors {\n  const validationErrors: Errors = {};\n\n  err.inner.forEach((error) => {\n    validationErrors[error.path] = error.message;\n  });\n  return validationErrors;\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  padding: 30px;\n  overflow: hidden;\n`;\n","import styled, { css } from 'styled-components';\nimport { animated } from 'react-spring';\n\ninterface ContainerProps {\n  type?: 'success' | 'error' | 'info';\n  hasdescription: number;\n}\n\nconst toastTypeVariations = {\n  info: css`\n    background: #ebf8ff;\n    color: #3172b7;\n  `,\n  success: css`\n    background: #e6fffa;\n    color: #2e656a;\n  `,\n  error: css`\n    background: #fddede;\n    color: #c53030;\n  `,\n};\n\nexport const Container = styled(animated.div)<ContainerProps>`\n  width: 360px;\n  position: relative;\n  padding: 16px 30px 16px 16px;\n  border-radius: 10px;\n  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);\n  display: flex;\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  ${(props) => toastTypeVariations[props.type || 'info']}\n\n  > svg {\n    margin: 4px 12px 0 0;\n  }\n\n  div {\n    flex: 1;\n\n    p {\n      margin-top: 4px;\n      font-size: 14px;\n      opacity: 0.8;\n      line-height: 20px;\n    }\n  }\n\n  button {\n    position: absolute;\n    right: 16px;\n    top: 19px;\n    opacity: 0.8;\n    border: 0;\n    background: transparent;\n    color: inherit;\n  }\n\n  ${(props) =>\n    !props.hasdescription &&\n    css`\n      align-items: center;\n\n      svg {\n        margin-top: 0;\n      }\n    `}\n`;\n","import React, { useEffect } from 'react';\n\nimport {\n  FiAlertCircle,\n  FiXCircle,\n  FiCheckCircle,\n  FiInfo,\n} from 'react-icons/fi';\nimport { ToastMessage, useToast } from '../../../hooks/toast';\n\nimport { Container } from './styles';\n\ninterface ToastProps {\n  message: ToastMessage;\n  style: object;\n}\n\nconst icons = {\n  info: <FiInfo size={24} />,\n  error: <FiAlertCircle size={24} />,\n  success: <FiCheckCircle size={24} />,\n};\n\nconst Toast: React.FC<ToastProps> = ({ message, style }) => {\n  const { removeToast } = useToast();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [removeToast, message.id]);\n\n  return (\n    <Container\n      type={message.type}\n      hasdescription={message.description ? 1 : 0}\n      style={style}\n    >\n      {icons[message.type || 'info']}\n      <div>\n        <strong>{message.title}</strong>\n        {message.description && <p>{message.description}</p>}\n      </div>\n\n      <button onClick={() => removeToast(message.id)} type=\"button\">\n        <FiXCircle size={18} />\n      </button>\n    </Container>\n  );\n};\n\nexport default Toast;\n","import React from 'react';\nimport { useTransition } from 'react-spring';\nimport { Container } from './styles';\nimport { ToastMessage } from '../../hooks/toast';\nimport Toast from './Toast';\n\ninterface ToastContainerProps {\n  messages: ToastMessage[];\n}\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ messages }) => {\n  const messagesWithTransitions = useTransition(\n    messages,\n    (message) => message.id,\n    {\n      from: { right: '-120%', opacity: 0 },\n      enter: { right: '0%', opacity: 1 },\n      leave: { right: '-120%', opacity: 0 },\n    },\n  );\n\n  return (\n    <Container>\n      {messagesWithTransitions.map(({ item, key, props }) => (\n        <Toast key={key} style={props} message={item} />\n      ))}\n    </Container>\n  );\n};\n\nexport default ToastContainer;\n","import React, { createContext, useContext, useCallback, useState } from 'react';\nimport { uuid } from 'uuidv4';\nimport ToastContainer from '../components/ToastContainer';\n\nexport interface ToastMessage {\n  id: string;\n  type?: 'success' | 'error' | 'info';\n  title: string;\n  description?: string;\n}\n\ninterface ToastContextData {\n  addToast(message: Omit<ToastMessage, 'id'>): void;\n  removeToast(id: string): void;\n}\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nexport const ToastProvider: React.FC = ({ children }) => {\n  const [messages, setMessages] = useState<ToastMessage[]>([]);\n\n  const addToast = useCallback(\n    ({ type, title, description }: Omit<ToastMessage, 'id'>) => {\n      const id = uuid();\n\n      const toast = {\n        id,\n        type,\n        title,\n        description,\n      };\n\n      setMessages((oldMessages) => [...oldMessages, toast]);\n    },\n    [],\n  );\n\n  const removeToast = useCallback((id: string) => {\n    setMessages((state) => state.filter((message) => message.id !== id));\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer messages={messages} />\n    </ToastContext.Provider>\n  );\n};\n\nexport function useToast(): ToastContextData {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n\n  return context;\n}\n","import React, { useRef, useCallback } from 'react';\nimport * as Yup from 'yup';\nimport { FormHandles } from '@unform/core';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Container, Content, AnimationContainer } from './styles';\nimport logoImg from '../../assets/logo.png';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { useAuth } from '../../hooks/auth';\nimport { useToast } from '../../hooks/toast';\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const history = useHistory();\n  const { signIn } = useAuth();\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('Email obrigatório')\n            .email('Digite um e-mail válido'),\n          password: Yup.string().required('Senha obrigatória'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n        await signIn({\n          email: data.email,\n          password: data.password,\n        });\n\n        addToast({\n          type: 'success',\n          title: 'Login efetuado',\n          description: 'Seu login foi feito com sucesso!',\n        });\n\n        history.push('/dashboard');\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro na autenticação',\n          description: 'Ocorreu um erro ao fazer login, cheque as credenciais.',\n        });\n      }\n    },\n    [signIn, addToast, history],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"GoBarber\" />\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu login</h1>\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n            <Button type=\"submit\">Entrar</Button>\n\n            <Link to=\"forgot-password\">Esqueci minha senha</Link>\n          </Form>\n          <Link to=\"/signup\">\n            <FiLogIn />\n            Criar conta\n          </Link>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\nimport backgroundImage from '../../assets/sign-up-background.png';\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  max-width: 700px;\n\n  img {\n    max-width: 300px;\n  }\n`;\n\nconst appearFromRight = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(+50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  animation: ${appearFromRight} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, '#f4ede8')};\n      }\n    }\n  }\n\n  > a {\n    color: #f4ede8;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    transition: color 0.2s;\n\n    &:hover {\n      color: ${shade(0.2, '#f4ede8')};\n    }\n\n    svg {\n      margin-right: 16px;\n    }\n  }\n`;\n","import React, { useCallback, useRef } from 'react';\nimport { FiMail, FiLock, FiUser, FiArrowLeft } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.png';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, AnimationContainer } from './styles';\nimport { useToast } from '../../hooks/toast';\n\ninterface SignUpFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (data: SignUpFormData) => {\n      try {\n        formRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .required('Email obrigatório')\n            .email('Digite um e-mail válido'),\n          password: Yup.string().min(6, 'No minimo 6 digitos'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await api.post('/users', data);\n\n        history.push('/');\n\n        addToast({\n          type: 'success',\n          title: 'Cadastro concluído',\n          description: 'Seu cadastro foi efetuado com sucesso!',\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro no cadastro',\n          description: 'Ocorreu um erro ao cadastrar, tente novamente.',\n        });\n      }\n    },\n    [addToast, history],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"GoBarber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu cadastro</h1>\n\n            <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n            <Button type=\"submit\">Cadastrar</Button>\n          </Form>\n          <Link to=\"/\">\n            <FiArrowLeft />\n            Voltar para Login\n          </Link>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\nimport backgroundImage from '../../assets/sign-in-background.png';\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  max-width: 700px;\n\n  img {\n    max-width: 300px;\n  }\n`;\n\nconst appearFromLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  animation: ${appearFromLeft} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, '#f4ede8')};\n      }\n    }\n  }\n\n  > a {\n    color: #f2f2f2;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    transition: color 0.2s;\n\n    &:hover {\n      color: ${shade(0.2, '#f2f2f2')};\n    }\n\n    svg {\n      margin-right: 16px;\n    }\n  }\n`;\n","import React, { useRef, useCallback, useState } from 'react';\nimport * as Yup from 'yup';\nimport { FormHandles } from '@unform/core';\nimport { FiLogIn, FiMail } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { Link } from 'react-router-dom';\nimport { Container, Content, AnimationContainer } from './styles';\nimport logoImg from '../../assets/logo.png';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { useToast } from '../../hooks/toast';\nimport api from '../../services/api';\n\ninterface ForgotPasswordFormData {\n  email: string;\n}\n\nconst ForgotPassword: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const formRef = useRef<FormHandles>(null);\n\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: ForgotPasswordFormData) => {\n      try {\n        setLoading(true);\n        formRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('Email obrigatório')\n            .email('Digite um e-mail válido'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        // Recuperação de senha\n\n        await api.post('/password/forgot', {\n          email: data.email,\n        });\n\n        addToast({\n          type: 'success',\n          title: 'E-mail de recuperação enviado',\n          description:\n            'Enviamos um e-mail para confirmar a recuperação de senha, cheque sua caixa de entrada!',\n        });\n\n        // history.push('/dashboard');\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro na recuperação de senha',\n          description:\n            'Ocorreu um erro ao tentar fazer a recuperação de senha, tente novamente.',\n        });\n      } finally {\n        setLoading(false);\n      }\n    },\n    [addToast],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"GoBarber\" />\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Recuperar Senha</h1>\n\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n\n            <Button loading={loading} type=\"submit\">\n              Recuperar\n            </Button>\n          </Form>\n          <Link to=\"/\">\n            <FiLogIn />\n            Voltar ao Login\n          </Link>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default ForgotPassword;\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  max-width: 700px;\n\n  img {\n    max-width: 300px;\n  }\n`;\n\nconst appearFromLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  animation: ${appearFromLeft} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, '#f4ede8')};\n      }\n    }\n  }\n\n  > a {\n    color: #f2f2f2;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    transition: color 0.2s;\n\n    &:hover {\n      color: ${shade(0.2, '#f2f2f2')};\n    }\n\n    svg {\n      margin-right: 16px;\n    }\n  }\n`;\n","import React, { useRef, useCallback } from 'react';\nimport * as Yup from 'yup';\nimport { FormHandles } from '@unform/core';\nimport { FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Container, Content, AnimationContainer } from './styles';\nimport logoImg from '../../assets/logo.png';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { useToast } from '../../hooks/toast';\nimport api from '../../services/api';\n\ninterface ResetPasswordFormData {\n  password: string;\n  password_confirmation: string;\n}\n\nconst ResetPassword: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { addToast } = useToast();\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleSubmit = useCallback(\n    async (data: ResetPasswordFormData) => {\n      try {\n        formRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          password: Yup.string().required('Senha obrigatória'),\n          password_confirmation: Yup.string().oneOf(\n            [Yup.ref('password'), null],\n            'A confirmação deve ser igual à nova senha escolhida',\n          ),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        const { password, password_confirmation } = data;\n        const token = location.search.replace('?token=', '');\n\n        if (!token) {\n          throw new Error();\n        }\n\n        await api.post('/password/reset', {\n          password,\n          password_confirmation,\n          token,\n        });\n\n        addToast({\n          type: 'success',\n          title: 'Senha Resetada com Sucesso!',\n          description:\n            'A sua senha foi resetada. Por favor, faça o login com a nova senha!',\n        });\n\n        history.push('/');\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro ao Resetar Senha',\n          description: 'Ocorreu um erro ao resetar sua senha, tente novamente.',\n        });\n      }\n    },\n    [addToast, history, location.search],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"GoBarber\" />\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Resetar Senha</h1>\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Nova Senha\"\n            />\n\n            <Input\n              name=\"password_confirmation\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Confirmação da Senha\"\n            />\n\n            <Button type=\"submit\">Alterar Senha</Button>\n          </Form>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default ResetPassword;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.div``;\n\nexport const Header = styled.div`\n  padding: 32px 0;\n  background: #28262e;\n`;\n\nexport const HeaderContent = styled.div`\n  max-width: 1120px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n\n  > img {\n    height: 80px;\n  }\n\n  button {\n    margin-left: auto;\n    background: transparent;\n    border: 0;\n\n    svg {\n      color: #999591;\n      height: 20px;\n      width: 20px;\n    }\n  }\n\n  @media (max-width: 425px) {\n    > img {\n      display: none;\n    }\n\n    button {\n      margin-left: auto;\n      margin-right: 30px;\n    }\n  }\n`;\n\nexport const Profile = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 80px;\n\n  div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 16px;\n    line-height: 24px;\n\n    span {\n      color: #f4ede8;\n    }\n\n    a {\n      text-decoration: none;\n      color: red;\n      text-transform: capitalize;\n\n      &:hover {\n        opacity: 0.8;\n      }\n    }\n  }\n`;\n\nexport const Content = styled.main`\n  max-width: 1120px;\n  margin: 64px auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const SectionCard = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: 460px;\n  background: #28262e;\n  padding: 30px;\n  margin: 10px 0;\n  border-radius: 10px;\n\n  a {\n    font-size: 18px;\n    color: #f2f2f2;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    margin: 0 5px;\n  }\n\n  a:hover {\n    color: ${shade(0.2, '#F2F2F2')};\n  }\n\n  @media (max-width: 425px) {\n    max-width: 260px;\n    margin: 30px 0;\n  }\n`;\n","import React from 'react';\n\nimport { FiPower, FiArrowRight } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport {\n  Container,\n  Header,\n  HeaderContent,\n  Profile,\n  Content,\n  SectionCard,\n} from './styles';\n\nimport logoImg from '../../assets/logo.png';\nimport { useAuth } from '../../hooks/auth';\n\nconst Dashboard: React.FC = () => {\n  const { signOut, user } = useAuth();\n\n  return (\n    <Container>\n      <Header>\n        <HeaderContent>\n          <img src={logoImg} alt=\"GoBarber\" />\n\n          <Profile>\n            <div>\n              <span>Bem vindo,</span>\n              <Link to=\"/profile\">\n                <strong>{user.name}</strong>\n              </Link>\n            </div>\n          </Profile>\n\n          <button type=\"button\" onClick={signOut}>\n            <FiPower />\n          </button>\n        </HeaderContent>\n      </Header>\n      <Content>\n        <SectionCard>\n          <div>\n            <h2> Sky </h2>\n          </div>\n          <div>\n            <a href=\"/\">\n              {' '}\n              acessar <FiArrowRight />{' '}\n            </a>\n          </div>\n        </SectionCard>\n        <SectionCard>\n          <div>\n            <h2> Totvs </h2>\n          </div>\n          <div>\n            <a href=\"/\">\n              {' '}\n              acessar <FiArrowRight />{' '}\n            </a>\n          </div>\n        </SectionCard>\n        <SectionCard>\n          <div>\n            <h2> CheckSum </h2>\n          </div>\n          <div>\n            <a href=\"/\">\n              {' '}\n              acessar <FiArrowRight />{' '}\n            </a>\n          </div>\n        </SectionCard>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport Route from './Route';\n\nimport SignIn from '../pages/SignIn';\nimport SignUp from '../pages/SignUp';\nimport ForgotPassword from '../pages/ForgotPassword';\nimport ResetPassword from '../pages/ResetPassword';\n\nimport Dashboard from '../pages/Dashboard';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={SignIn} />\n    <Route path=\"/signup\" component={SignUp} />\n    <Route path=\"/forgot-password\" component={ForgotPassword} />\n    <Route path=\"/reset-password\" component={ResetPassword} />\n    <Route path=\"/dashboard\" component={Dashboard} isPrivate />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\n\nimport { AuthProvider } from './auth';\nimport { ToastProvider } from './toast';\n\nconst AppProvider: React.FC = ({ children }) => (\n  <AuthProvider>\n    <ToastProvider>{children}</ToastProvider>\n  </AuthProvider>\n);\n\nexport default AppProvider;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\n\nimport AppProvider from './hooks';\n\nconst App: React.FC = () => (\n  <BrowserRouter>\n    <AppProvider>\n      <Routes />\n    </AppProvider>\n\n    <GlobalStyle />\n  </BrowserRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}